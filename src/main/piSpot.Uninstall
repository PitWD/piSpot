#!/bin/bash

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
CONF_FILE="$SCRIPT_DIR/piSpot.conf"

clear
echo "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
echo "| \\033[1m p i S p o t   U n i n s t a l l a t i o n   S c r i p t \\033[0m |"
echo "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
echo

echo -n "[ 1] Check and get 'piSpot.conf' configuration file... "
# Get piSpot configuration
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
CONF_FILE="$SCRIPT_DIR/piSpot.conf"
if [[ -f "$CONF_FILE" ]]; then
    source "$CONF_FILE"
else
    echo "[\\033[31m!\\033[0m]"
    echo "Config '$CONF_FILE' not found." >&2
    exit 1
fi
echo "[\\033[32m✓\\033[0m]"

echo -n "[ 2] Check for root privileges... "
# Check for root privileges
if [[ "$EUID" -ne 0 ]]; then
    echo "[\\033[31m!\\033[0m]"
	echo "Missing root privileges - use sudo...!" >&2
	exit 1
fi
echo "[\\033[32m✓\\033[0m]"

# Access Point entfernen
echo -n "[ 3] Down $SSID... "
nmcli connection down "$SSID"
echo "[\\033[32m✓\\033[0m]"
echo -n "[ 4] Remove $SSID... "
nmcli connection delete "$SSID"
echo "[\\033[32m✓\\033[0m]"

# Bei IPv4method ungleich shared
if [[ "$IPV4method" != "shared" ]]; then
    echo "[+] Beende dnsmasq falls aktiv..."
    pkill dnsmasq 2>/dev/null || true

    echo "[+] IPv4 Forwarding deaktivieren..."
    echo 0 > /proc/sys/net/ipv4/ip_forward

    echo "[+] Entferne iptables-Regeln..."
    iptables -t nat -D POSTROUTING -o "$UPSTREAM" -j MASQUERADE 2>/dev/null || true
    iptables -D FORWARD -i "$IFACE" -o "$UPSTREAM" -j ACCEPT 2>/dev/null || true
    iptables -D FORWARD -i "$UPSTREAM" -o "$IFACE" -m state --state RELATED,ESTABLISHED -j ACCEPT 2>/dev/null || true
    iptables -D INPUT -i "$UPSTREAM" -p tcp --dport 22 -j ACCEPT 2>/dev/null || true
    iptables -D INPUT -i "$UPSTREAM" -j DROP 2>/dev/null || true
fi

echo -n "[ 5] Remove wrapper at '$WRAPPER_LOCATION'... "
# Wrapper entfernen
if [[ -f "$WRAPPER_LOCATION" ]]; then
    # remove wrapper file
    rm -f "$WRAPPER_LOCATION"
    # remove wrapper folder if empty
    WRAPPER_DIR="$(dirname "$WRAPPER_LOCATION")"
    if [[ -d "$WRAPPER_DIR" ]] && [[ -z "$(ls -A "$WRAPPER_DIR")" ]]; then
        rmdir "$WRAPPER_DIR"
    fi
    echo "[\\033[32m✓\\033[0m]"
    echo "Wrapper '$WRAPPER_LOCATION' removed."
else
    echo "[\\033[31m!\\033[0m]"
    echo "Wrapper $WRAPPER_LOCATION did not exist."
fi

echo -n "[ 6] Restore original '$WRAPPER_ENVIRONMENT' PATH configuration... "
# Restore original PATH configuration
if [[ -f "$SCRIPT_DIR/piSpot.conf.bak" ]]; then
    cp "$WRAPPER_ENVIRONMENT.piSpot.bak" "$WRAPPER_ENVIRONMENT"
    rm -f "$WRAPPER_ENVIRONMENT.piSpot.bak"
    echo "[\\033[32m✓\\033[0m]"
    echo
    read -p "Reboot now to apply changes? [y/N] " reboot_reply
    if [[ "$reboot_reply" =~ ^[YyJj]$ ]]; then
        read -p "Press ENTER to reboot..."
        shutdown -r now
    else
        echo "Quitting uninstall - You need to reboot your system to apply changes!" >&2
        exit 1
    fi
else
    echo "[\\033[31m!\\033[0m]"
    echo "No '$WRAPPER_ENVIRONMENT' backup found. You need to fix this manually!" >&2
    exit 1
fi
ENV_FILE="/etc/environment"

exit 0APP_VERSION="0.0.3"
APP_STATE="dev"
APP_DATE="17.07.2025"
