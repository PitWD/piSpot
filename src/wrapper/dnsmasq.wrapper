#!/bin/bash

# If nmcli gets started in AP-mode with NAT, e.g:

    # nmcli connection add type wifi \
        # ifname wlan0 \
        # con-name piSpot \
        # autoconnect yes \
        # ssid piSpot \
        # mode ap
    # nmcli connection modify piSpot \
        # 802-11-wireless.mode ap \
        # 802-11-wireless.band bg \
        # ipv4.method shared \
        # ipv4.addresses 10.0.1.254/24 \
        # ipv6.method shared \
        # wifi-sec.key-mgmt wpa-psk \
        # wifi-sec.psk piSpot1234 \
        # wifi-sec.proto rsn \
        # wifi-sec.pairwise ccmp \
        # wifi-sec.group ccmp
    # nmcli connection up piSpot

# nmcli is calling dnsmasq with the following (almost hard-coded) parameters:
# sudo ps -ef | grep [N]etworkManager
# gives us...:
    # nobody       702     549  0 15:10 ?        00:00:00
        #/usr/sbin/dnsmasq \
            #--conf-file=/dev/null \
            #--no-hosts \
            #--keep-in-foreground \
            #--bind-interfaces \
            #--except-interface=lo \
            #--clear-on-reload \
            #--strict-order \
            #--listen-address=10.0.1.254 \
            #--dhcp-range=10.0.1.1,10.0.1.245,60m \
            #--dhcp-leasefile=/var/lib/NetworkManager/dnsmasq-wlan0.leases \
            #--pid-file=/run/nm-dnsmasq-wlan0.pid \
            #--conf-dir=/etc/NetworkManager/dnsmasq-shared.d

# the "--conf-file=/dev/null" excludes us from using config files
# and the "--conf-dir=/etc/NetworkManager/dnsmasq-shared.d" is then not used too
# so we need to use a wrapper to be able to modify/inject parameters

# We wanna set/modify the following parameters:
#   the "--conf-file=/dev/null" we change to an individual listen port
#   we change the "--dhcp-range=" parameters to individual values
#   the "--conf-dir=" we change to individual upstream DNS servers
# so, finally we get somthing like that:
    #/usr/sbin/dnsmasq \
        #--port=individual \
        #--no-hosts \
        #--keep-in-foreground \
        #--bind-interfaces \
        #--except-interface=lo \
        #--clear-on-reload \
        #--strict-order \
        #--listen-address=10.0.1.254 \
        #--dhcp-range=individual,individual,individual \
        #--dhcp-leasefile=/var/lib/NetworkManager/dnsmasq-wlan0.leases \
        #--pid-file=/run/nm-dnsmasq-wlan0.pid \
        #--server=individual,individual 


# These placeholders will be set by the Install.sh script
ipv4_address="__IPV4ADDRESS__"
ipv4_dns="__IPV4DNS__"
ipv6_dns="__IPV6DNS__"
dhcp4_start="__DHCP4START__"
dhcp4_stop="__DHCP4STOP__"
dhcp4_leasetime="__DHCP4LEASETIME__"
dns_port="__DNSPORT__"
WRAPPER_TARGET="__WRAPPERTARGET__"

# STARTIP und STOPIP berechnen
IP_PREFIX=$(echo "$dhcp4_start" | awk -F. '{print $1 "." $2 "." $3 "."}')
STARTIP="${IP_PREFIX}1"
IP_PREFIX=$(echo "$dhcp4_stop" | awk -F. '{print $1 "." $2 "." $3 "."}')
STOPIP="${IP_PREFIX}245"

MATCH_LISTEN="--listen-address=$ipv4_address"
MATCH_DHCP="--dhcp-range=$STARTIP,$STOPIP,60m"
MATCH_CONF_FILE="--conf-file=/dev/null"
MATCH_CONF_DIR="--conf-dir=/etc/NetworkManager/dnsmasq-shared.d"

found=0
for arg in "$@"; do
    [[ "$arg" == "$MATCH_LISTEN" ]] && ((found++))
    [[ "$arg" == "$MATCH_DHCP" ]] && ((found++))
    [[ "$arg" == "$MATCH_CONF_DIR" ]] && ((found++))
    [[ "$arg" == $MATCH_CONF_FILE* ]] && ((found++))
done

MODIFIED_ARGS=()
if [[ "$found" -eq 4 ]]; then
    for arg in "$@"; do
        case "$arg" in
            "$MATCH_CONF_FILE")
                MODIFIED_ARGS+=("--port=$dns_port")
                ;;
            "$MATCH_DHCP")
                MODIFIED_ARGS+=("--dhcp-range=$dhcp4_start,$dhcp4_stop,$dhcp4_leasetime")
                ;;
            "$MATCH_CONF_DIR")
                MODIFIED_ARGS+=("--server=$ipv4_dns,$ipv6_dns")
                ;;
            *)
                MODIFIED_ARGS+=("$arg")
                ;;
        esac
    done
else
    MODIFIED_ARGS=("$@")
fi

exec "$WRAPPER_TARGET" "${MODIFIED_ARGS[@]}"

