#!/bin/bash

APP_NAME="piSpot"
APP_VERSION="0.0.1"
APP_STATE="dev" # alpha, beta, stable, dev
APP_DATE="26.06.2025"


# - This script is intended to be run by systemd -
# To restart dnsmasq with individual parameters
# IF NetworkManager started a fitting dnsmasq instance

# If NetworkManager gets started in AP-mode with NAT, e.g:

    # nmcli connection add type wifi \
        # ifname wlan0 \
        # con-name piSpot \
        # autoconnect yes \
        # ssid piSpot \
        # mode ap \
        # 802-11-wireless.mode ap \
        # 802-11-wireless.band bg \
        # ipv4.method shared \
        # ipv4.addresses 10.0.1.254/24 \
        # ipv6.method shared \
        # wifi-sec.key-mgmt wpa-psk \
        # wifi-sec.psk piSpot1234 \
        # wifi-sec.proto rsn \
        # wifi-sec.pairwise ccmp \
        # wifi-sec.group ccmp
    # nmcli connection up piSpot

# nmcli is calling dnsmasq with the following (almost hard-coded) parameters:
# sudo ps -ef | grep [N]etworkManager
# gives us...:
    # nobody       702     549  0 15:10 ?        00:00:00
        #/usr/sbin/dnsmasq \
            #--interface=wlan0 \
            #--conf-file=/dev/null \
            #--no-hosts \
            #--keep-in-foreground \
            #--bind-interfaces \
            #--except-interface=lo \
            #--clear-on-reload \
            #--strict-order \
            #--listen-address=10.0.1.254 \
            #--dhcp-range=10.0.1.1,10.0.1.245,60m \
            #--dhcp-leasefile=/var/lib/NetworkManager/dnsmasq-wlan0.leases \
            #--pid-file=/run/nm-dnsmasq-wlan0.pid \
            #--conf-dir=/etc/NetworkManager/dnsmasq-shared.d

# the "--conf-file=/dev/null" excludes us from using config files
# and the "--conf-dir=/etc/NetworkManager/dnsmasq-shared.d" is then not used too
# so we need to use a tweak to be able to modify/inject parameters

# We wanna set/modify the following parameters:
# so, finally we get somthing like that:
    #/usr/sbin/dnsmasq \
        #--interface=individual \
        #--port=individual \
        #--no-hosts \
        #--keep-in-foreground \
        #--bind-interfaces \
        #--except-interface=lo \
        #--clear-on-reload \
        #--strict-order \
        #--listen-address=10.0.1.254 \
        #--dhcp-range=individual,individual,individual \
        #--dhcp-leasefile=/var/lib/NetworkManager/dnsmasq-wlan0.leases \
        #--pid-file=/run/nm-dnsmasq-wlan0.pid \
        #--server=individual \
        #--conf-file=/dev/null \

# These placeholders will be set by the Install.sh script
wifi_ifname="__IFACE__"
ipv4_address="__IPV4ADDRESS__"
ipv4_dns="__IPV4DNS__"
ipv6_dns="__IPV6DNS__"
dhcp4_start="__DHCP4START__"
dhcp4_stop="__DHCP4STOP__"
dhcp4_leasetime="__DHCP4LEASETIME__"
dhcp4_leasefile="__DHCP4LEASEFILE__"
dns_port="__DNSPORT__"
dns_pidfile="__DNSPIDFILE__"
TWEAK_DNSMASQ="__TWEAKDNSMASQ__"

# Combine and make list of comma separated upstream DNS servers
dns_upstream="$ipv4_dns,$ipv6_dns"
IFS=',' read -r -a DNSservers <<< "$dns_upstream"

strDNSmasq=" --interface=$wifi_ifname"
strDNSmasq+=" --listen-address=$ipv4_address"
strDNSmasq+=" --dhcp-range=$dhcp4_start,$dhcp4_stop,$dhcp4_leasetime"
strDNSmasq+=" --port=$dns_port"
for server in "${DNSservers[@]}"; do
    strDNSmasq+=" --server=$server"
done
strDNSmasq+=" --dhcp-leasefile=$dhcp4_leasefile"
strDNSmasq+=" --pid-file=$dns_pidfile"
strDNSmasq+=" --no-hosts"
strDNSmasq+=" --keep-in-foreground"
strDNSmasq+=" --bind-interfaces"
strDNSmasq+=" --except-interface=lo"
strDNSmasq+=" --clear-on-reload"
strDNSmasq+=" --strict-order"
strDNSmasq+=" --conf-file=/dev/null"


for i in {1..120}; do
    # Check if "ps -ef contains dns_pidfile
    if pgrep -f $dns_pidfile; then
        pkill -f $dns_pidfile
        if [ $? -ne 0 ]; then
            echo " Failed to kill NetworkManagers dnsmasq." >&2
            exit 1
        fi
        echo " NetworkManagers dnsmasq killed."
        # Start dnsmasq with the new parameters
        $TWEAK_DNSMASQ $strDNSmasq
        if [ $? -ne 0 ]; then
            echo " Failed to start piSpots dnsmasq with new parameters." >&2
            exit 1
        fi
        echo " Tweaked NetworkManager dnsmasq restarted by piSpot."
        exit 0
    fi
    sleep 0.5
done

echo " piSpots dnsmasq restarter failed to restart dnsmasq." >&2
exit 1